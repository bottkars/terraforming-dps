resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 1.0.0      

resources:
- name: terraform
  type: terraform
  source:
    env_name: ((ENV))
    backend_type: s3
    backend_config:
      access_key: ((((foundation))/s3_access_key_id))
      endpoint:  ((((foundation))/s3_endpoint))
      region: ((((foundation))/s3_region_name))
      secret_key: ((((foundation))/s3_secret_access_key))
      key: "terraforming-dps/terraforming-gcp/terraform.tfstate"
      bucket: "terraform"      
      skip_credentials_validation: true
      skip_metadata_api_check: true
      skip_region_validation: true
      force_path_style  : true

- name: terraform-vars
  type: s3
  icon: folder-move
  source:
    access_key_id: ((((foundation))/s3_access_key_id))
    endpoint:  ((((foundation))/s3_endpoint))
    region_name: ((((foundation))/s3_region_name))
    secret_access_key: ((((foundation))/s3_secret_access_key))
    regexp: terraforming-dps/terraforming-gcp/terraform_(?P<version>([0-9]{4})\.(0[1-9]|1[0-2])\.(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})).auto.tfvars.json
#    regexp: terraforming-dps/terraforming-gcp/terraform_(.*).auto.tfvars
    bucket: terraform     
#      skip_credentials_validation: true
#      skip_metadata_api_check: true
#      skip_region_validation: true
#      force_path_style  : true


- name: terraforming-dps
  icon: git
  type: git
  check_every: 10m  
  source:  
    uri: https://github.com/bottkars/terraforming-dps.git
    branch: main

jobs:
- name: terraform-plan
  plan:
  - get: terraforming-dps
  - get: terraform-vars
  - put: terraform 
    params:
      env_name: ((ENV))
      terraform_source: terraforming-dps/terraforming-gcp
      plan_only: true
      vars: ((GCP.prod))
      vars-files: terraform-vars

- name: terraform-apply
  plan:
  - get: terraforming-dps
    trigger: false
    passed: [terraform-plan]
  - get: terraform
    trigger: false
    passed: [terraform-plan]
  - put: terraform
    params:
      env_name: ((ENV))
      terraform_source: terraforming-dps/terraforming-gcp
      plan_run: true

- name: terraform-destroy
  plan:
    - get: terraforming-dps
    - put: terraform
      params:
        terraform_source: terraforming-dps/terraforming-gcp
        env_name: ((ENV))
        action: destroy
        vars: ((GCP.prod))
      get_params:
        action: destroy