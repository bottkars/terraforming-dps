s3_env: &s3_env
  access_key_id: ((((foundation))/s3_access_key_id))
  endpoint:  ((((foundation))/s3_endpoint))
  region_name: ((((foundation))/s3_region_name))
  secret_access_key: ((((foundation))/s3_secret_access_key))
tf_backend_env: &tf_backend
  TF_BACKEND_TYPE: s3
  TF_BACKEND_CONFIG_access_key: ((((foundation))/s3_access_key_id))
  TF_BACKEND_CONFIG_endpoint:  ((((foundation))/s3_endpoint))
  TF_BACKEND_CONFIG_region: ((((foundation))/s3_region_name))
  TF_BACKEND_CONFIG_secret_key: ((((foundation))/s3_secret_access_key))
  TF_BACKEND_CONFIG_key: "terraforming-dps/terraform.tfstate"
  TF_BACKEND_CONFIG_bucket: "terraform"

#  TF_BACKEND_CONFIG_skip_requesting_account_id: true
  TF_BACKEND_CONFIG_skip_credentials_validation: true
#  TF_BACKEND_CONFIG_skip_get_ec2_platforms: true
  TF_BACKEND_CONFIG_skip_metadata_api_check: true
  TF_BACKEND_CONFIG_skip_region_validation: true
  TF_BACKEND_CONFIG_force_path_style: true
tf_vars: &tf_vars
  TF_DIR_PATH: terraforming_ddve
  TF_VAR_subscription_id: ((azure_dell_subscription_id))
  TF_VAR_tenant_id: ((azure_dell_tenant_id))
  TF_VAR_client_id: ((azure_dell_client_id))
  TF_VAR_client_secret: ((azure_dell_client_secret))
resources:
  - name: tfvars
    icon: cloud-download
    type: s3
    source:
      <<: *s3_env
      bucket: terraform
      regexp: terraforming-dps/terraform_(.*).auto.tfvars

  - name: concourse-terraform
    type: git
    source:
      uri: https://github.com/Snapkitchen/concourse-terraform
  - name: dps-modules
    tags: ((tags))
    icon: git
    type: git
    check_every: 10m  
    source:  
      uri: https://github.com/bottkars/dps_modules.git
      branch: master   
  - name: concourse-terraform-image
    type: docker-image
    source:
#      repository: snapkitchen/concourse-terraform
      repository: bottkars/concourse-terraform
      tag: latest
  - name: terraforming-dps
    tags: ((tags))
    icon: git
    type: git
    check_every: 10m  
    source:  
      uri: https://github.com/bottkars/terraforming-dps.git
      branch: master
  - name: terraform-destroy-plan
    icon: cloud-download
    type: s3
    source:
      <<: *s3_env
      bucket: terraform
      regexp: destroy/terraform-(\d{10}).tar.gz 
  - name: terraform-apply-plan
    icon: cloud-download
    type: s3
    source:
      <<: *s3_env
      bucket: terraform
      regexp: apply/terraform-(\d{10}).tar.gz       
groups:
- name: auto
  jobs:
  - auto-plan
- name: create
  jobs:
  - plan
  - review
  - approve
  - apply
- name: destroy
  jobs:
  - plan-destroy
  - review-destroy
  - approve-destroy
  - apply-destroy
jobs:
  # a job using a terraform task with the terraform image
- name: auto-plan
  plan: 
  - get: tfvars
  - get: concourse-terraform
  - get: concourse-terraform-image
  - get: terraforming-dps
  - task: terraform-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/plan.yaml
    input_mapping:
      terraform-source-dir: terraforming-dps
      aux-input-1: tfvars
    params:
      TF_AUX_INPUT_PATH_1: aux-input-1
      <<: *tf_backend
      <<: *tf_vars


# a job using a terraform task with the terraform image
- name: plan
  plan: 
  - get: tfvars
  - get: concourse-terraform
  - get: concourse-terraform-image
  - get: terraforming-dps
  - task: terraform-create-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/create-plan.yaml
    input_mapping:
      terraform-source-dir: terraforming-dps
      aux-input-1: tfvars
    params:
      TF_AUX_INPUT_PATH_1: aux-input-1
      <<: *tf_backend
      <<: *tf_vars     
  - put: terraform-apply-plan
    params:
      file: plan-output-archive/terraform-*.tar.gz

- name: review
  serial_groups: [terraform]
  plan:
  - in_parallel:
    - get: concourse-terraform
      passed: [plan]    
    - get: dps-modules
#        passed: [plan]
    - get: concourse-terraform-image
      passed: [plan]
    - get: terraform-apply-plan
      params:
        unpack: true
      passed: [plan]
  - task: show-plan
    image: concourse-terraform-image
    file: dps-modules/ci/tasks/terraform-show-plan.yml
    input_mapping:
      dps-modules: dps-modules
      plan-output-archive: terraform-apply-plan
    params:
      STATE_OUTPUT_DIR: terraforming_ddve


- name: approve
  serial_groups: [terraform]
  plan:
  - in_parallel:
    - get: concourse-terraform
      passed: [review]
    - get: concourse-terraform-image
      passed: [review]
    - get: terraform-apply-plan
      passed: [review]

- name: apply
  plan:
  - in_parallel:
      - get: concourse-terraform
        passed: [approve]
      - get: concourse-terraform-image
        passed: [approve]
      - get: terraform-apply-plan
        passed: [approve]
        trigger: true
  - task: apply-plan
    image: concourse-terraform-image
    file: concourse-terraform/tasks/apply-plan.yaml
    input_mapping:
      plan-output-archive: terraform-apply-plan    
    params:
      DEBUG: true
#          TF_AUX_INPUT_PATH_1: aux-input-1
      <<: *tf_backend
#          <<: *tf_vars     



- name: plan-destroy
  plan: 
  - get: tfvars
  - get: concourse-terraform
  - get: concourse-terraform-image
  - get: terraforming-dps
  - task: terraform-plan-destroy
    image: concourse-terraform-image
    file: concourse-terraform/tasks/create-plan.yaml
    input_mapping:
      terraform-source-dir: terraforming-dps
      aux-input-1: tfvars
    params:
      DEBUG: false
      DESTROY: true
      TF_AUX_INPUT_PATH_1: aux-input-1
      <<: *tf_backend
      <<: *tf_vars 
  - put: terraform-destroy-plan
    params:
      file: plan-output-archive/terraform-*.tar.gz

# review-destroy
# ==============
- name: review-destroy
  serial_groups: [terraform]
  plan:
  - in_parallel:
    - get: concourse-terraform
      passed: [plan-destroy]    
    - get: dps-modules
    - get: concourse-terraform-image
      passed: [plan-destroy]
    - get: terraform-destroy-plan
      params:
        unpack: true
      passed: [plan-destroy]
  - task: show-plan
    image: concourse-terraform-image
    file: dps-modules/ci/tasks/terraform-show-plan.yml
    input_mapping:
      dps-modules: dps-modules
      plan-output-archive: terraform-destroy-plan
    params:
      STATE_OUTPUT_DIR: terraforming_ddve

# approve-destroy
# ===============
- name: approve-destroy
  serial_groups: [terraform]
  plan:
  - in_parallel:
    - get: concourse-terraform
      passed: [review-destroy]
    - get: concourse-terraform-image
      passed: [review-destroy]
    - get: terraform-destroy-plan
      passed: [review-destroy]


- name: apply-destroy
  plan: 
  - get: terraform-destroy-plan
    passed: [approve-destroy]
    trigger: true
  - get: concourse-terraform
    passed: [approve-destroy]
  - get: concourse-terraform-image
    passed: [approve-destroy]
  - task: terraform-apply-destroy
    image: concourse-terraform-image
    file: concourse-terraform/tasks/apply-plan.yaml
    input_mapping:
#        terraform-source-dir: terraforming-dps
#        aux-input-1: tfvars
      plan-output-archive: terraform-destroy-plan        
    params:
      DEBUG: true
      DESTROY: true
#        TF_AUX_INPUT_PATH_1: aux-input-1
      <<: *tf_backend
#        <<: *tf_vars     
